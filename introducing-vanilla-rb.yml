Vanilla.rb
==========

A long time ago (like... 2002 or something; the *iron age* of the internet) I powered my blawg (then at [lazyatom.com][1]) using an application called [Vanilla][2], developed by [Christian Langreiter][5]. To see what it was like, here's a cringeworthy [flashback][3] to my site back then; or, better still, look at [Murray Steele's site][13] which runs on Vanilla at the moment. As does [Christian's][5], naturally.

Blikis
------
[Vanilla][2] is a bit like a wiki, and a bit like a blog. They call it a [bliki][6], which I'm sure you can figure out yourselves. But perhaps one way to characterise that is that a wiki is just a heap of content, organised in pages and with links between, whereas a blog is a sequence of content, typically arranged chronologically, and often into sections (maybe even via tags if you've upgraded to web two-point-oh).

So the *wiki* part gives us all of our information and its relationship with other content, and the *blog* part lets us string a thread through that soup of data, and pull out *some of the content in reverse order of creation*.

And why not define "smart threads" that can assemble bits of content dynamically, depending on their content or attributes?

Vanilla calls these croutons of content "[snips][7]", and the smart threads "[dynasnips][10]". It's written in the [weirdly wonderful REBOL language][4], which I'm very glad that I had to opportunity to learn, but also wasn't sorry to leave, because its a somewhat different programming paradigm based on building 'dialects'. You can find out more at the [official Vanilla site][2].

So what?
--------
There's no reason to limit that *blog* part to the dimension of time, really. What if I want some interface on top of my data soup to find me all the bits of content that I've indicated are my friends contact details? Or how about finding all the bits of content that have my friends birthdays, and present them in chronological order so I can see who's going to get sent a [Bratz Fashion Pixiez Unicorn][8] next. Hell, find me all the bits of content that contain my friends website addresses, and extract the RSS feeds from each of them, and then render it as an OPML file for my feed reader!

As Grosenbach says, [we all need to write our own blog software][11]. While I couldn't keep a part of my brain wrapped around REBOL, I've never fallen out of love with Vanilla.

So I'm doing [just that][12].


[1]: http://www.lazyatom.com
[2]: http://www.vanillasite.at
[3]: http://web.archive.org/web/20021011201553/http://www.lazyatom.com/exec/vanilla.r
[4]: http://www.rebol.com
[5]: http://www.langreiter.com
[6]: http://en.wikipedia.org/wiki/Bliki
[7]: http://vanillasite.at/space/Snips+and+Spaces
[8]: http://www.toysrus.co.uk/Product.aspx/TruOrFindUsing/TruAZOfBrands/TruToysBratz/339350
[9]: http://vanillasite.at/space/Vanilla+in+2+Minutes
[10]: http://vanillasite.at/space/tutorial-dynadev-hello-user
[11]: http://nubyonrails.com/articles/about-this-blog-memcached
[12]: https://github.com/lazyatom/vanilla-rb/tree
[13]: http://www.h-lame.com/--- # Soup attributes
:render_as: Markdown
:updated_at: 2008-12-11 17:38:20 +00:00
:name: introducing-vanilla-rb
:created_at: 2008-03-13 15:53:00 +00:00
:kind: blog
